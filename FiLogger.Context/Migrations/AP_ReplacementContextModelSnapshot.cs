// <auto-generated />
using System;
using FiLogger.Context.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FiLogger.Context.Migrations
{
    [DbContext(typeof(AP_ReplacementContext))]
    partial class AP_ReplacementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FiLogger.Common.Models.CoverDetails", b =>
                {
                    b.Property<int>("CoverDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CoverStartDate");

                    b.Property<bool>("IsProductOnMainOrder");

                    b.Property<int>("PolicyClaimLimitId");

                    b.Property<int>("PolicyDurationId");

                    b.Property<DateTime?>("PresentationDate");

                    b.Property<int>("ProductId");

                    b.Property<decimal>("RetailPrice");

                    b.Property<DateTime?>("TreatmentDate");

                    b.Property<string>("UniqueReference")
                        .HasMaxLength(30);

                    b.HasKey("CoverDetailsId");

                    b.HasIndex("PolicyClaimLimitId");

                    b.HasIndex("PolicyDurationId");

                    b.HasIndex("ProductId");

                    b.ToTable("CoverDetails");

                    b.HasData(
                        new
                        {
                            CoverDetailsId = 1,
                            CoverStartDate = new DateTime(2019, 2, 19, 11, 28, 58, 788, DateTimeKind.Local).AddTicks(7131),
                            IsProductOnMainOrder = false,
                            PolicyClaimLimitId = 1,
                            PolicyDurationId = 1,
                            PresentationDate = new DateTime(2019, 2, 19, 11, 28, 58, 788, DateTimeKind.Local).AddTicks(8688),
                            ProductId = 1,
                            RetailPrice = 5000m,
                            TreatmentDate = new DateTime(2019, 2, 19, 11, 28, 58, 788, DateTimeKind.Local).AddTicks(9938),
                            UniqueReference = "ABC 123"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.CustomerAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(50);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50);

                    b.Property<string>("County")
                        .HasMaxLength(50);

                    b.Property<int>("CustomerId");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100);

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30);

                    b.Property<string>("Postcode")
                        .HasMaxLength(20);

                    b.Property<string>("PropertyName")
                        .HasMaxLength(50);

                    b.Property<string>("PropertyNumber")
                        .HasMaxLength(20);

                    b.Property<string>("Town")
                        .HasMaxLength(50);

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddress");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AddressLine1 = "New Street",
                            AddressLine2 = "Apple Avenue",
                            County = "Warwickshire",
                            CustomerId = 1,
                            EmailAddress = "test@test.com",
                            MobileNumber = "01234 678 910",
                            PhoneNumber = "01895 123456",
                            Postcode = "CV31 2KJ",
                            PropertyNumber = "5",
                            Town = "New Town"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.CustomerDetails", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ContactConsent");

                    b.Property<int>("DeferedSalesStatusId");

                    b.Property<int>("DistanceSellingId");

                    b.Property<DateTime?>("FirstContactDate");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<int>("FranchiseId");

                    b.Property<bool>("HasCustomerInitiated");

                    b.Property<bool>("IsOrgansiation");

                    b.Property<string>("OrgansiationName")
                        .HasMaxLength(50);

                    b.Property<int>("PolicyStatusId");

                    b.Property<int>("RetailManagerId");

                    b.Property<int>("SalesPersonId");

                    b.Property<int>("SdnId");

                    b.Property<string>("Surname")
                        .HasMaxLength(50);

                    b.Property<int>("TitleId");

                    b.HasKey("CustomerId");

                    b.HasIndex("DeferedSalesStatusId");

                    b.HasIndex("DistanceSellingId");

                    b.HasIndex("FranchiseId");

                    b.HasIndex("PolicyStatusId");

                    b.HasIndex("RetailManagerId");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("TitleId");

                    b.ToTable("CustomerDetails");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ContactConsent = false,
                            DeferedSalesStatusId = 1,
                            DistanceSellingId = 1,
                            FirstContactDate = new DateTime(2019, 2, 19, 11, 28, 58, 788, DateTimeKind.Local).AddTicks(1530),
                            FirstName = "Tommy",
                            FranchiseId = 1,
                            HasCustomerInitiated = false,
                            IsOrgansiation = false,
                            PolicyStatusId = 1,
                            RetailManagerId = 1,
                            SalesPersonId = 1,
                            SdnId = 1,
                            Surname = "Test",
                            TitleId = 1
                        },
                        new
                        {
                            CustomerId = 2,
                            ContactConsent = true,
                            DeferedSalesStatusId = 1,
                            DistanceSellingId = 2,
                            FirstContactDate = new DateTime(2019, 2, 19, 11, 28, 58, 788, DateTimeKind.Local).AddTicks(5625),
                            FirstName = "John",
                            FranchiseId = 2,
                            HasCustomerInitiated = true,
                            IsOrgansiation = true,
                            OrgansiationName = "New Company LTD",
                            PolicyStatusId = 1,
                            RetailManagerId = 2,
                            SalesPersonId = 1,
                            SdnId = 2,
                            Surname = "Smith",
                            TitleId = 4
                        },
                        new
                        {
                            CustomerId = 3,
                            ContactConsent = false,
                            DeferedSalesStatusId = 2,
                            DistanceSellingId = 1,
                            FirstContactDate = new DateTime(2019, 2, 19, 11, 28, 58, 788, DateTimeKind.Local).AddTicks(6048),
                            FirstName = "Jane",
                            FranchiseId = 2,
                            HasCustomerInitiated = false,
                            IsOrgansiation = false,
                            PolicyStatusId = 1,
                            RetailManagerId = 1,
                            SalesPersonId = 2,
                            SdnId = 3,
                            Surname = "Jones",
                            TitleId = 2
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.CustomerDocuments", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<string>("DocumentLocation")
                        .HasMaxLength(50);

                    b.HasKey("DocumentId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerDocuments");

                    b.HasData(
                        new
                        {
                            DocumentId = 1,
                            CustomerId = 1,
                            DocumentLocation = "/documents/1234.pdf"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.CustomerProducts", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnName("customer_id");

                    b.Property<int>("ProductsId")
                        .HasColumnName("products_id");

                    b.Property<int>("ProductStatusId")
                        .HasColumnName("product_status_id");

                    b.HasKey("CustomerId", "ProductsId");

                    b.HasIndex("ProductStatusId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Customer-Products");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ProductsId = 1,
                            ProductStatusId = 1
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.DeferredProductStatus", b =>
                {
                    b.Property<int>("DeferredProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<DateTime?>("PresentationDate");

                    b.Property<bool>("PresentedToCustomer");

                    b.Property<int>("ProductId");

                    b.HasKey("DeferredProductId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("DeferredProductStatus");

                    b.HasData(
                        new
                        {
                            DeferredProductId = 1,
                            CustomerId = 1,
                            PresentationDate = new DateTime(2019, 2, 19, 11, 28, 58, 786, DateTimeKind.Local).AddTicks(8336),
                            PresentedToCustomer = false,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.DeferredSalesStatus", b =>
                {
                    b.Property<int>("DeferredSalesStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeferredSalesStatusValue")
                        .HasMaxLength(50);

                    b.HasKey("DeferredSalesStatusId");

                    b.ToTable("DeferredSalesStatus");

                    b.HasData(
                        new
                        {
                            DeferredSalesStatusId = 1,
                            DeferredSalesStatusValue = "Deferred Sale"
                        },
                        new
                        {
                            DeferredSalesStatusId = 2,
                            DeferredSalesStatusValue = "Customer Can Initiate"
                        },
                        new
                        {
                            DeferredSalesStatusId = 3,
                            DeferredSalesStatusValue = "Ready For Sale"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.DistanceSellingAcknowledgementOptions", b =>
                {
                    b.Property<int>("DistanceSellingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DistanceSellingDescription")
                        .HasMaxLength(50);

                    b.HasKey("DistanceSellingId");

                    b.ToTable("DistanceSellingAcknowledgementOptions");

                    b.HasData(
                        new
                        {
                            DistanceSellingId = 1,
                            DistanceSellingDescription = "if you buy in person..."
                        },
                        new
                        {
                            DistanceSellingId = 2,
                            DistanceSellingDescription = "If you are addressed..."
                        },
                        new
                        {
                            DistanceSellingId = 3,
                            DistanceSellingDescription = "If you purchase..."
                        },
                        new
                        {
                            DistanceSellingId = 4,
                            DistanceSellingDescription = "This is a business..."
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.FinanceCompanyOptions", b =>
                {
                    b.Property<int>("FinanceCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FinanceCompanyName")
                        .HasMaxLength(50);

                    b.HasKey("FinanceCompanyId");

                    b.ToTable("FinanceCompanyOptions");

                    b.HasData(
                        new
                        {
                            FinanceCompanyId = 1,
                            FinanceCompanyName = "VMFS"
                        },
                        new
                        {
                            FinanceCompanyId = 2,
                            FinanceCompanyName = "Honda"
                        },
                        new
                        {
                            FinanceCompanyId = 3,
                            FinanceCompanyName = "Toyota"
                        },
                        new
                        {
                            FinanceCompanyId = 4,
                            FinanceCompanyName = "Jaguar"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.FinanceDetails", b =>
                {
                    b.Property<int>("FinanceDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountFinanced");

                    b.Property<int>("AnticipatedMilage");

                    b.Property<int>("ContractedMilage");

                    b.Property<decimal>("FinalPaymentAmount");

                    b.Property<int>("FinanceCompanyId");

                    b.Property<byte>("FinanceTermMonths");

                    b.Property<int>("FinanceTypeId");

                    b.Property<int>("ProductId");

                    b.HasKey("FinanceDetailsId");

                    b.HasIndex("FinanceCompanyId");

                    b.HasIndex("FinanceTypeId");

                    b.HasIndex("ProductId");

                    b.ToTable("FinanceDetails");

                    b.HasData(
                        new
                        {
                            FinanceDetailsId = 1,
                            AmountFinanced = 25000m,
                            AnticipatedMilage = 1000,
                            ContractedMilage = 1000,
                            FinalPaymentAmount = 5000m,
                            FinanceCompanyId = 1,
                            FinanceTermMonths = (byte)12,
                            FinanceTypeId = 1,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.FinanceTypeOptions", b =>
                {
                    b.Property<int>("FinanceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FinanceTypeName")
                        .HasMaxLength(50);

                    b.HasKey("FinanceTypeId");

                    b.ToTable("FinanceTypeOptions");

                    b.HasData(
                        new
                        {
                            FinanceTypeId = 1,
                            FinanceTypeName = "PCP"
                        },
                        new
                        {
                            FinanceTypeId = 2,
                            FinanceTypeName = "Conditional Sale"
                        },
                        new
                        {
                            FinanceTypeId = 4,
                            FinanceTypeName = "Personal Loan"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.FranchiseOptions", b =>
                {
                    b.Property<int>("FranchiseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FranshiseName")
                        .HasMaxLength(50);

                    b.HasKey("FranchiseId");

                    b.ToTable("FranchiseOptions");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            FranshiseName = "Non-Franchise sale"
                        },
                        new
                        {
                            FranchiseId = 2,
                            FranshiseName = "Lexus"
                        },
                        new
                        {
                            FranchiseId = 3,
                            FranshiseName = "Honda"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.PolicyClaimLimitOptions", b =>
                {
                    b.Property<int>("PolicyClaimLimitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PolicyClaimLimitValue")
                        .HasMaxLength(50);

                    b.HasKey("PolicyClaimLimitId");

                    b.ToTable("PolicyClaimLimitOptions");

                    b.HasData(
                        new
                        {
                            PolicyClaimLimitId = 1,
                            PolicyClaimLimitValue = "Per Cover"
                        },
                        new
                        {
                            PolicyClaimLimitId = 2,
                            PolicyClaimLimitValue = "Purchase Price"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.PolicyDurationOptions", b =>
                {
                    b.Property<int>("PolicyDurationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PolicyDurationValue")
                        .HasMaxLength(50);

                    b.HasKey("PolicyDurationId");

                    b.ToTable("PolicyDurationOptions");

                    b.HasData(
                        new
                        {
                            PolicyDurationId = 1,
                            PolicyDurationValue = "Per cover"
                        },
                        new
                        {
                            PolicyDurationId = 2,
                            PolicyDurationValue = "12 Month"
                        },
                        new
                        {
                            PolicyDurationId = 3,
                            PolicyDurationValue = "24 Month"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.PolicyStatusOptions", b =>
                {
                    b.Property<int>("PolicyStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PolicyStatus")
                        .HasMaxLength(50);

                    b.HasKey("PolicyStatusId");

                    b.ToTable("PolicyStatusOptions");

                    b.HasData(
                        new
                        {
                            PolicyStatusId = 1,
                            PolicyStatus = "Partial Quote"
                        },
                        new
                        {
                            PolicyStatusId = 2,
                            PolicyStatus = "Cancelled"
                        },
                        new
                        {
                            PolicyStatusId = 3,
                            PolicyStatus = "Not Taken up"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.PolicyType", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PolicyName")
                        .HasMaxLength(50);

                    b.Property<int>("ProductId");

                    b.HasKey("PolicyId");

                    b.HasIndex("ProductId");

                    b.ToTable("PolicyType");

                    b.HasData(
                        new
                        {
                            PolicyId = 1,
                            PolicyName = "Listers SMART £10 bodyshop  Excess",
                            ProductId = 1
                        },
                        new
                        {
                            PolicyId = 2,
                            PolicyName = "Listers GAP",
                            ProductId = 2
                        },
                        new
                        {
                            PolicyId = 3,
                            PolicyName = "Listers Protech Plus Fabric.",
                            ProductId = 3
                        },
                        new
                        {
                            PolicyId = 4,
                            PolicyName = "Listers Protech Plus Leather.",
                            ProductId = 3
                        },
                        new
                        {
                            PolicyId = 5,
                            PolicyName = "Listers Protech ",
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.ProductTypeOptions", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductTypeName")
                        .HasMaxLength(50);

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductTypeOptions");

                    b.HasData(
                        new
                        {
                            ProductTypeId = 1,
                            ProductTypeName = "Cover"
                        },
                        new
                        {
                            ProductTypeId = 2,
                            ProductTypeName = "Finace"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.ProductsAndServicesOptions", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeferredProduct");

                    b.Property<string>("ProductName")
                        .HasMaxLength(50);

                    b.Property<int>("ProductTypeId");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductsAndServicesOptions");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            IsDeferredProduct = false,
                            ProductName = "Listers SMART",
                            ProductTypeId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            IsDeferredProduct = true,
                            ProductName = "Listers GAP",
                            ProductTypeId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            IsDeferredProduct = false,
                            ProductName = "Listers Protech",
                            ProductTypeId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            IsDeferredProduct = false,
                            ProductName = "Listers Hire Purchase",
                            ProductTypeId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            IsDeferredProduct = false,
                            ProductName = "Listers Lease Purchase",
                            ProductTypeId = 1
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.ProductsAndServicesStatusOptions", b =>
                {
                    b.Property<int>("ProductsStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductStatus")
                        .HasMaxLength(50);

                    b.HasKey("ProductsStatusId");

                    b.ToTable("ProductsAndServicesStatusOptions");

                    b.HasData(
                        new
                        {
                            ProductsStatusId = 1,
                            ProductStatus = "Not Taken"
                        },
                        new
                        {
                            ProductsStatusId = 2,
                            ProductStatus = "Taken"
                        },
                        new
                        {
                            ProductsStatusId = 3,
                            ProductStatus = "Amended"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.RetailManagerOptions", b =>
                {
                    b.Property<int>("RetailManagerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RetailManagerName")
                        .HasMaxLength(50);

                    b.HasKey("RetailManagerId");

                    b.ToTable("RetailManagerOptions");

                    b.HasData(
                        new
                        {
                            RetailManagerId = 1,
                            RetailManagerName = "Richard Branson"
                        },
                        new
                        {
                            RetailManagerId = 2,
                            RetailManagerName = "Elon Musk"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.SalesPersonOptions", b =>
                {
                    b.Property<int>("SalesPersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SalesPersonName")
                        .HasMaxLength(50);

                    b.HasKey("SalesPersonId");

                    b.ToTable("SalesPersonOptions");

                    b.HasData(
                        new
                        {
                            SalesPersonId = 1,
                            SalesPersonName = "Richard Branson"
                        },
                        new
                        {
                            SalesPersonId = 2,
                            SalesPersonName = "Elon Musk"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.SdnOptions", b =>
                {
                    b.Property<int>("SdnId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<bool>("IsCommercial");

                    b.Property<bool>("IsFullyComp");

                    b.Property<bool>("IsFullyInsured");

                    b.Property<bool>("IsLeisure");

                    b.Property<bool>("IsPrivateHire");

                    b.HasKey("SdnId");

                    b.HasIndex("CustomerId");

                    b.ToTable("SdnOptions");

                    b.HasData(
                        new
                        {
                            SdnId = 1,
                            CustomerId = 1,
                            IsCommercial = false,
                            IsFullyComp = false,
                            IsFullyInsured = false,
                            IsLeisure = false,
                            IsPrivateHire = false
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.TitleOptions", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitleName")
                        .HasMaxLength(30);

                    b.HasKey("TitleId");

                    b.ToTable("TitleOptions");

                    b.HasData(
                        new
                        {
                            TitleId = 1,
                            TitleName = "Mr"
                        },
                        new
                        {
                            TitleId = 2,
                            TitleName = "Mrs"
                        },
                        new
                        {
                            TitleId = 3,
                            TitleName = "Ms"
                        },
                        new
                        {
                            TitleId = 4,
                            TitleName = "Mx"
                        },
                        new
                        {
                            TitleId = 5,
                            TitleName = "Doctor"
                        },
                        new
                        {
                            TitleId = 6,
                            TitleName = "Professor"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.VehicleDetails", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aspiration")
                        .HasMaxLength(50);

                    b.Property<decimal?>("CurrentMileage");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime?>("DateRegistered");

                    b.Property<DateTime?>("DeliveryDate");

                    b.Property<string>("EngineSize")
                        .HasMaxLength(50);

                    b.Property<decimal?>("InvoiceValue");

                    b.Property<bool>("IsFinanced");

                    b.Property<bool>("IsNew");

                    b.Property<string>("Keyword1")
                        .HasMaxLength(30);

                    b.Property<string>("Keyword2")
                        .HasMaxLength(30);

                    b.Property<string>("Keyword3")
                        .HasMaxLength(30);

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(50);

                    b.Property<string>("Model")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("MotDueDate");

                    b.Property<DateTime?>("PurchasedDate");

                    b.Property<string>("StockId")
                        .HasMaxLength(50);

                    b.Property<bool>("VehicleRegAvailable");

                    b.Property<string>("VehicleRegistration")
                        .HasMaxLength(50);

                    b.Property<int>("VehicleTypeId");

                    b.Property<int>("VehicleUseId");

                    b.Property<DateTime?>("WarrantyExpires");

                    b.HasKey("VehicleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VehicleTypeId");

                    b.HasIndex("VehicleUseId");

                    b.ToTable("VehicleDetails");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            Aspiration = "Turbo",
                            CurrentMileage = 50m,
                            CustomerId = 1,
                            DateRegistered = new DateTime(2019, 2, 19, 11, 28, 58, 781, DateTimeKind.Local).AddTicks(1514),
                            EngineSize = "999cc",
                            IsFinanced = false,
                            IsNew = false,
                            Keyword1 = "White",
                            Keyword2 = "Hatchback",
                            Keyword3 = "FWD",
                            Manufacturer = "SEAT",
                            Model = "Arona",
                            PurchasedDate = new DateTime(2019, 2, 19, 11, 28, 58, 782, DateTimeKind.Local).AddTicks(8993),
                            VehicleRegAvailable = true,
                            VehicleRegistration = "HGV12FD",
                            VehicleTypeId = 1,
                            VehicleUseId = 1
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.VehicleTypeOptions", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VehicleTypeName")
                        .HasMaxLength(50);

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleTypeOptions");

                    b.HasData(
                        new
                        {
                            VehicleTypeId = 1,
                            VehicleTypeName = "Car"
                        },
                        new
                        {
                            VehicleTypeId = 2,
                            VehicleTypeName = "LCV"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.VehicleUseOptions", b =>
                {
                    b.Property<int>("VehicleUseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VehicleUseName")
                        .HasMaxLength(50);

                    b.HasKey("VehicleUseId");

                    b.ToTable("VehicleUseOptions");

                    b.HasData(
                        new
                        {
                            VehicleUseId = 1,
                            VehicleUseName = "Private"
                        },
                        new
                        {
                            VehicleUseId = 2,
                            VehicleUseName = "Commercial"
                        },
                        new
                        {
                            VehicleUseId = 3,
                            VehicleUseName = "Hire and Reward"
                        },
                        new
                        {
                            VehicleUseId = 4,
                            VehicleUseName = "Motability"
                        },
                        new
                        {
                            VehicleUseId = 5,
                            VehicleUseName = "Business"
                        });
                });

            modelBuilder.Entity("FiLogger.Common.Models.CoverDetails", b =>
                {
                    b.HasOne("FiLogger.Common.Models.PolicyClaimLimitOptions", "PolicyClaimLimit")
                        .WithMany("CoverDetails")
                        .HasForeignKey("PolicyClaimLimitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.PolicyDurationOptions", "PolicyDuration")
                        .WithMany("CoverDetails")
                        .HasForeignKey("PolicyDurationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.ProductsAndServicesOptions", "Product")
                        .WithMany("CoverDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.CustomerAddress", b =>
                {
                    b.HasOne("FiLogger.Common.Models.CustomerDetails", "Customer")
                        .WithMany("CustomerAddress")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.CustomerDetails", b =>
                {
                    b.HasOne("FiLogger.Common.Models.DeferredSalesStatus", "DeferedSalesStatus")
                        .WithMany("CustomerDetails")
                        .HasForeignKey("DeferedSalesStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.DistanceSellingAcknowledgementOptions", "DistanceSelling")
                        .WithMany("CustomerDetails")
                        .HasForeignKey("DistanceSellingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.FranchiseOptions", "Franchise")
                        .WithMany("CustomerDetails")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.PolicyStatusOptions", "PolicyStatus")
                        .WithMany("CustomerDetails")
                        .HasForeignKey("PolicyStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.RetailManagerOptions", "RetailManager")
                        .WithMany("CustomerDetails")
                        .HasForeignKey("RetailManagerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.SalesPersonOptions", "SalesPerson")
                        .WithMany("CustomerDetails")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.TitleOptions", "Title")
                        .WithMany("CustomerDetails")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.CustomerDocuments", b =>
                {
                    b.HasOne("FiLogger.Common.Models.CustomerDetails", "Customer")
                        .WithMany("CustomerDocuments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.CustomerProducts", b =>
                {
                    b.HasOne("FiLogger.Common.Models.CustomerDetails", "Customer")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Customer-Products_CustomerDetails");

                    b.HasOne("FiLogger.Common.Models.ProductsAndServicesStatusOptions", "ProductStatus")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("ProductStatusId")
                        .HasConstraintName("FK_Customer-Products_ProductsAndServicesStatusOptions");

                    b.HasOne("FiLogger.Common.Models.ProductsAndServicesOptions", "Products")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("ProductsId")
                        .HasConstraintName("FK_Customer-Products_ProductsAndServicesOptions");
                });

            modelBuilder.Entity("FiLogger.Common.Models.DeferredProductStatus", b =>
                {
                    b.HasOne("FiLogger.Common.Models.CustomerDetails", "Customer")
                        .WithMany("DeferredProductStatus")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.ProductsAndServicesOptions", "Product")
                        .WithMany("DeferredProductStatus")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.FinanceDetails", b =>
                {
                    b.HasOne("FiLogger.Common.Models.FinanceCompanyOptions", "FinanceCompany")
                        .WithMany("FinanceDetails")
                        .HasForeignKey("FinanceCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.FinanceTypeOptions", "FinanceType")
                        .WithMany("FinanceDetails")
                        .HasForeignKey("FinanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.ProductsAndServicesOptions", "Product")
                        .WithMany("FinanceDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.PolicyType", b =>
                {
                    b.HasOne("FiLogger.Common.Models.ProductsAndServicesOptions", "Product")
                        .WithMany("PolicyType")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.ProductsAndServicesOptions", b =>
                {
                    b.HasOne("FiLogger.Common.Models.ProductTypeOptions", "ProductType")
                        .WithMany("ProductsAndServicesOptions")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.SdnOptions", b =>
                {
                    b.HasOne("FiLogger.Common.Models.CustomerDetails", "Customer")
                        .WithMany("SdnOptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiLogger.Common.Models.VehicleDetails", b =>
                {
                    b.HasOne("FiLogger.Common.Models.CustomerDetails", "Customer")
                        .WithMany("VehicleDetails")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.VehicleTypeOptions", "VehicleType")
                        .WithMany("VehicleDetails")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiLogger.Common.Models.VehicleUseOptions", "VehicleUse")
                        .WithMany("VehicleDetails")
                        .HasForeignKey("VehicleUseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
